% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/match_xs_ys.R
\name{match_xs_ys}
\alias{match_xs_ys}
\title{Collapse multiple possible matches between two data.tables}
\usage{
match_xs_ys(dt_x, dt_y, xs, ys, reverse = FALSE, lower = TRUE, ...)
}
\arguments{
\item{dt_x}{A data.table where you wish to find corresponding index values in \emph{dt_y}}

\item{dt_y}{A data.table where matching values in \emph{dt_x} should be found, and indices from \emph{dt_y} returned}

\item{xs}{A chr vector of names in \emph{dt_x} to match upon.
Intrinsic order is potentially important, and must correspond to order and length of \emph{ys}. Non-character columns
will be coerced to character via \code{as.character}, with a warning.}

\item{ys}{A chr vector of names in \emph{dt_y} that correspond to \emph{xs} in scope and length. Non-character columns
will be coerced to character via \code{as.character}, with a warning.}

\item{reverse}{Logi. Do you wish to perform the match in reverse, that is find indices in \emph{dt_x} where corresponding
values in \emph{dt_y} match? Defaults to \code{FALSE}}

\item{lower}{Should values within \emph{xs} and \emph{ys} be lowercased? Defaults to \code{TRUE}}

\item{...}{Additional arguments to pass to \code{Reduce()}}
}
\value{
An \code{integer} vector of length \emph{xs} or length \emph{ys} (since it is required that \code{length(xs) == length(ys)})
containing matching indices, else \code{NA}. The indices by default denote the positions of values in \emph{dt_y} that
match \emph{dt_x}, unless \code{reverse = TRUE}, in which case the reverse.

Additionally, a console message containing match statistics.
}
\description{
Cascading character matching for sets of columns across two data.tables
}
\details{
Addresses a common merge use case between two tables where a single, robust key is not available, and one must rely on
one or more fields between the two tables to make a best-attempt merge. In this scenario, the order of values in \emph{xs},
and the corresponding order in \emph{ys} is critical, and should correspond to one's best-guess (expectation) of specificity,
since this function calls \code{Reduce} to collapse the list of match results into a single vector.

If the \code{fastmatch} package is loaded, will use \code{fastmatch::fmatch} for performance, else
will use \code{base::match}.
}
\note{
At the moment, this function coerces both \emph{xs} and \emph{ys} to lowercase via \code{tolower}. This is likely to be an
option in the near future, perhaps with a default of \code{TRUE}. Additionally, \code{match} is called as
\code{match(x, y, nomatch = NA_integer_, incomparables = NULL)}, and this is enforced, with no plans to make optional.
}
\examples{
set.seed(10)
# dt_x is the table you want to append to
dt_x <- data.table(
  key_a = sample(LETTERS[1:15], replace = FALSE)
)
# dt_y has one or more target fields you wish to pull, using the keys
# from dt_x.
dt_y <- data.table(
  col_a = unlist(Map(c, LETTERS[seq(1, 10, by = 2)], list(NA_character_))),
  col_b = unlist(Map(c, list(NA_character_), LETTERS[seq(2, 11, by = 2)])),
  targ = sample(1:100L, 10, replace = FALSE)
)
# this is used for indexing results out
mvec <- match_xs_ys(dt_x, dt_y, c("key_a", "key_a"), c("col_a", "col_b"))
# pull over results
dt_x[, targ := dt_y$targ[mvec]]
}
