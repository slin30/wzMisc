% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/depth.R
\name{depth}
\alias{depth}
\alias{depth_while}
\title{depth}
\usage{
depth(lst, d = 0L)

depth_while(lst, d = 0L)
}
\arguments{
\item{lst}{input list to determine depth of}

\item{d}{optional default starting or return value if \emph{this} is not a list; defaults to \code{0L}}
}
\value{
An integer of length 1
}
\description{
Recursively determine depth of a list
}
\details{
There are two versions of this function. \code{depth} is a recursive version, and
\code{depth_while} is an imperitive version. Both achieve the same end results, although one might
be more performant that the other, depending on the usage scenario.

In practice, it is unlikely performance will ever be an issue with this function, as meaningful differences
between the two approaches will only be apparent with tens of thousands of runs, and checking list depth
is almost always a one-off, usually as a part of function input validation.
}
\note{
This is mainly used as a helper function to check inputs, but generally useful enough to include as
a standalone

Credit to: \url{http://stackoverflow.com/a/13433689/1270695} for \code{depth}
}
\examples{
depth(list(1:3))
depth(list(list(1:3)))
depth(list(1:3, "a", list(1:2)))
depth(list(1:3, "a", list(list(1:2))))
}

