% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/recur_unique.R
\name{recur_unique}
\alias{recur_unique}
\title{Recursively uniquify a list of vectors from left (top) to right (bottom)}
\usage{
recur_unique(lst, curr.iter = 0L, out = list())
}
\arguments{
\item{lst}{A list, typically of length > 1 with elements comprising atomic vectors}

\item{curr.iter}{Not used; internal counter}

\item{out}{Not used; result accumulator}
}
\value{
A list of identical length to the input, with element lengths equal to or
shorter than each initial element length, depending on the degree of overlap and/or
if any duplication was present within each element.
}
\description{
Ensure each successive list element is a distinct set relative to all previous elements
}
\details{
There is no type checking for list elements, so standard coercion rules apply,
and this may result in unexpected results. You should ensure that types are homogeneous.
}
\examples{
lst <- list(
  v1 = 1:10L,
  v2 = 1:12L,
  v3 = 1:13L
)
recur_unique(lst)
}
