% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/make_ftp_params.R
\name{make_ftp_params}
\alias{make_ftp_params}
\title{Construct params to interact with an FTP endpoint}
\usage{
make_ftp_params(host, protocol = "ftp", user = NULL, pwd = NULL)
}
\arguments{
\item{host}{(required) The host address string. Should take the form of \code{ftp.your_host.com}}

\item{protocol}{(optional) The protocol to use; defaults to \code{ftp}}

\item{user}{(optional) User login name, if host access requires authentication. If provided, \emph{pwd}
must also be a valid string}

\item{pwd}{(optional) User password, if host access requires authentication. If provided, \emph{user}
must also be a valid string}
}
\value{
A named list of length 2, containing the \code{url} and \code{userpwd}.
If either \emph{user} or \emph{pwd} are missing OR are blank, the second element will be \code{NULL}.
}
\description{
Create url strings and, optionally, authentication parameters for FTP endpoint interactions
}
\details{
This is a simple helper function that is most useful for constructing argument-lists to pass to e.g.
\code{\link[RCurl]{getURL}}; the outputs are named with this use case in mind. See examples.

This function normalizes common variants of input formats for \emph{host} and \emph{protocol}. See examples.
}
\examples{
# with authentication
make_ftp_params(host = "ftp.123.com", user = "myself", pwd = "my_pwd")

# NULL or blank for either of user or pwd will result in NULL userpwd
make_ftp_params(host = "ftp.123.com", user = "myself", pwd = " ")

# host and protocol input normalization
x0 <- make_ftp_params(host = "ftp.123.com", protocol = "ftp" )
x1 <- make_ftp_params(host = "ftp://ftp.123.com", protocol = "ftp")
x2 <- make_ftp_params(host = "ftp://ftp.123.com", protocol = "ftp://")
x3 <- make_ftp_params(host = "ftp://ftp.123.com")

all(sapply(list(x1, x2, x3), function(f) identical(x0, f)))

# If you wanted to get a listing of all files:
\dontrun{
library(RCurl)
my_params <- make_ftp_params(host = "ftp.123.com", user = "myself", pwd = "my_pwd")
my_params$ftplistonly <- TRUE
do.call(getURL, my_params)
}
}
